import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.json.simple.JSONObject;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;

public class QuickChatWindow extends javax.swing.JFrame {

    @SuppressWarnings("unchecked")
    public void storeMessages(String messageID, String recipient, String messageText, String messageHash) {
        try {
            Message msg = new Message(messageID, recipient, messageText, messageHash); // Fixed 'Recipient'
            JSONObject jsonObj = msg.toJSON();

            java.io.FileWriter file = new java.io.FileWriter("stored_messages.json", true);
            file.write(jsonObj.toJSONString() + System.lineSeparator());
            file.flush();
            file.close();
            
            JOptionPane.showMessageDialog(this, " Message stored successfully!");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error storing message: " + e.getMessage());
        }
    }
    
        public QuickChatWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ChatArea = new javax.swing.JScrollPane();
        txtChatArea = new javax.swing.JTextArea();
        txtMessageInput = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jlabel3 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtRecipientName = new javax.swing.JTextField();
        txtRecipient = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        txtChatArea.setEditable(false);
        txtChatArea.setColumns(20);
        txtChatArea.setRows(5);
        ChatArea.setViewportView(txtChatArea);

        txtMessageInput.setText("Type your message......");

        btnSend.setBackground(new java.awt.Color(0, 0, 204));
        btnSend.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 255, 255));
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setText("                           QUICKCHAT");

        jlabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlabel3.setText("Recipient:");

        btnLogout.setBackground(new java.awt.Color(255, 204, 204));
        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLogout.setText("Logout");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Recipient's number:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChatArea)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtMessageInput, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLogout)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jlabel3))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRecipientName)
                            .addComponent(txtRecipient))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRecipientName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtRecipient, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ChatArea, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessageInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        String recipient = txtRecipient.getText().trim();
        String message = txtMessageInput.getText().trim();
        
        if (recipient.isEmpty() || message.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Please fill in both the recipient number and message");
            return;
        }
        if (message.length() > 250) {
            int excess = message.length() - 250;
            JOptionPane.showMessageDialog(this,"Message exceeds 250 chaacters by " + excess +". Please reduce size");
            return;
        }
        if (!recipient.matches("\\+\\d{10,13}$")) {
            JOptionPane.showMessageDialog(this,"Recipient number is incorrectly formatted. Must include international code.");
            return;
        }
        
        String messageID = String.valueOf((long)(Math.random() * 9000000000L) + 1000000000L);
        
        String[] words = message.split(" ");
        String firstWord = words[0].toUpperCase();
        String lastWord = words[words.length - 1].toUpperCase();
        String messageHash =messageID.substring(0, 2) + ":1:" + firstWord + lastWord;
        
        int choice = JOptionPane.showOptionDialog(
            this,
            "Do you want to Send, Discard, or Store the message?",
            "Message Action",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            new String[]{"Send", "Discard", "Store"},
            "Send");
        if (choice == 0) {
            try {
                Connection conn = DBConnection.getConnection();
                String sql = "INSERT INTO messages (message, recipient_number, message_text, message_hash, message_status) VALUES (?, ?, ?, ?, ?)";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1,messageID);
                pst.setString(2,recipient);
                pst.setString(3, message);
                pst.setString(4, messageHash);
                pst.setString(5, "sent");
                pst.executeUpdate();
                conn.close();
                
                txtChatArea.append("To " + recipient + " at " + java.time.LocalDate.now() + "+" + message + "\n");
                
                JOptionPane.showMessageDialog(this, 
                        "Message successfully sent!\n" +
                                "Message ID: " + messageID + "\n" +
                                "Message Hash: " + messageHash + "\n" +
                                "Recipient: " + recipient + "\n" +
                                "Message: "+ message);
                
                txtMessageInput.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error saving message: " + e.getMessage());
                e.printStackTrace();
            }
        } else if (choice ==2) {
            try{
                JSONObject storedMessage = new JSONObject();
                storedMessage.put("message_id", messageID);
                storedMessage.put("recipient_number", recipient);
                storedMessage.put("message_hash", messageHash);
                storedMessage.put("status", "stored");
                
                FileWriter file = new FileWriter("message.json", true);
                file.write(storedMessage.toJSONString() + System.lineSeparator());
                file.close();
                
                JOptionPane.showMessageDialog(this, "Message stored successfully in JSON.");
                txtMessageInput.setText("");
                
            } catch (IOException e) { 
                JOptionPane.showMessageDialog(this, "Error storing message: " + e.getMessage());
                e.printStackTrace();
                
            }
                                        
            
        }
        
    }//GEN-LAST:event_btnSendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuickChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuickChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuickChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuickChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuickChatWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ChatArea;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jlabel3;
    private javax.swing.JTextArea txtChatArea;
    private javax.swing.JTextField txtMessageInput;
    private javax.swing.JTextField txtRecipient;
    private javax.swing.JTextField txtRecipientName;
    // End of variables declaration//GEN-END:variables
}
